{% block book_form %}
    {{ form_start(book_form) }}
    {% set f = book_form %}

    <div class="row">
        <div class="col-md-6">
            {{ form_row(f.title) }}
        </div>

        <div class="col-md-6">
            {{ form_row(f.series) }}
        </div>
    </div>


    {{ form_row(f.authors) }}

    <div class="row">
        <div class="col-md-4">
            {{ form_row(f.publisher) }}
        </div>

        <div class="col-md-4">
            {{ form_row(f.year) }}
        </div>

        <div class="col-md-4">
            {{ form_row(f.language) }}
        </div>
    </div>

    {{ form_row(f.cover, { 'attr': { 'list': 'images' }}) }}
    <b-form-datalist id="images" :options="images"></b-form-datalist>

    {{ form_row(f.category_choices) }}

    <div class="row">
        <div class="col-md-6">
            {{ form_row(f.local_id, { 'attr': { 'list': 'local_ids' } }) }}
            <b-form-datalist id="local_ids" :options="local_ids"></b-form-datalist>
        </div>

        <div class="col-md-6 d-flex justify-content-between align-content-stretch">
            {{ form_row(f.isbn, { 'attr': { 'list': 'other_isbn' }}) }}

            <div class="form-group align-self-end flex-grow-0">
                <b-button variant="link" @click="loadIsbn" :disabled="loadingIsbn">
                    <b-icon icon="arrow-repeat" :class="{ 'b-icon-animation-spin': loadingIsbn }"></b-icon>
                </b-button>
            </div>

            <b-form-datalist id="other_isbn" :options="other_isbn"></b-form-datalist>
        </div>
    </div>

    {{ form_row(f.description) }}

    {{ form_row(f.keywords) }}

    {{ form_end(book_form) }}
{% endblock %}

{% block book_form_scripts %}
    <script type="text/javascript">
        window.Mixin.add('book_form', {
            data: {
                categories: {{ library.categories|vue }},
                cover: '',
                isbn: '',
                other_isbn: [],
                images: [],
                local_ids: [],
                loadingIsbn: false,
            },

            methods: {
                setBook: function (book) {
                    book.cover = book.images.length > 0 ? book.images[0] : '';
                    book.providers = JSON.stringify(book.providers);

                    this.images = book.images;
                    this.other_isbn = [ ...book.other_isbn, book.isbn ];

                    this.fillForm('book_form', book);
                    this.loadCover(book);
                },

                loadCover: function (book) {
                    if (book.cover.length > 0) {
                        this.cover = book.cover;
                        return;
                    }

                    this.cover = '{{ route('books.no_cover') }}';

                    axios.post('{{ route('library.cover', library.slug) }}', {
                        title: book.title,
                        isbn: book.isbn,
                    }).then(({ data }) => {
                        this.cover = data;
                        $('#book_form_cover').val(data);
                    });
                },

                loadIsbn: function () {
                    const isbn = $('#book_form_isbn').val();

                    if (isbn.length === 0) return;

                    axios.post('{{ route('library.details', library.slug) }}', {
                        isbn: isbn
                    }).then(({ data }) => {
                        this.setBook(data);
                    });
                },
            },

            watch: {
                loadingIsbn: (value) => {
                    const button = document.getElementById('book_form_create');

                    if (button !== null) {
                        button.disabled = value;
                    }
                },
            },

            mounted() {
                const vue = this;

                vue.$on('select_book', vue.setBook);

                $('#book_form_cover').on('change', function () {
                    const book = {
                        title: $('#book_form_title').val(),
                        isbn: $('#book_form_isbn').val(),
                        cover: $(this).val(),
                    };

                    vue.loadCover(book);
                });

                const coverImage = $('img[data-cover]').data('cover');

                if (coverImage !== undefined) {
                    this.cover = coverImage;
                }

                axios.interceptors.request.use((config) => {
                    vue.loadingIsbn = true;

                    return config;
                }, (error) => {
                    vue.error = error.response;
                    vue.loadingIsbn = false;

                    return Promise.reject(error);
                });

                axios.interceptors.response.use((response) => {
                    vue.loadingIsbn = false;
                    vue.error = {};

                    return response;
                }, (error) => {
                    vue.loadingIsbn = false;
                    vue.error = error.response;

                    return Promise.reject(error);
                });
            },
        });
    </script>
{% endblock %}
